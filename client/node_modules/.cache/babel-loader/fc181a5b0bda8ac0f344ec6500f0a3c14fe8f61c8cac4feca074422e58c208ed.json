{"ast":null,"code":"var _jsxFileName = \"/Users/prashant/Desktop/blog/src/pages/Write.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Write = () => {\n  _s();\n  const [value, setValue] = useState('');\n  const editorRef = useRef(null);\n  useEffect(() => {\n    // You can manipulate the editorRef here instead of using findDOMNode\n    if (editorRef.current) {\n      console.log('Editor ready:', editorRef.current);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editorContainer\",\n        children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n          ref: editorRef,\n          theme: \"snow\",\n          value: value,\n          onChange: setValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: \"i1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: \"i2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Write, \"Na/gMuS9xHwJ4mapb2IQOkQQ/9M=\");\n_c = Write;\nexport default Write;\nvar _c;\n$RefreshReg$(_c, \"Write\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ReactQuill","jsxDEV","_jsxDEV","Write","_s","value","setValue","editorRef","current","console","log","className","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","ref","theme","onChange","_c","$RefreshReg$"],"sources":["/Users/prashant/Desktop/blog/src/pages/Write.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\nconst Write = () => {\n  const [value, setValue] = useState('');\n  const editorRef = useRef(null);\n\n  useEffect(() => {\n    // You can manipulate the editorRef here instead of using findDOMNode\n    if (editorRef.current) {\n      console.log('Editor ready:', editorRef.current);\n    }\n  }, []);\n\n  return (\n    <div className='add'>\n      <div className=\"content\">\n        <input type=\"text\" placeholder='Title' />\n        <div className='editorContainer'>\n          <ReactQuill ref={editorRef} theme=\"snow\" value={value} onChange={setValue} />\n        </div>\n      </div>\n      <div className=\"menu\">\n        <div className=\"item\">i1</div>\n        <div className=\"item\">i2</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Write;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMU,SAAS,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACd;IACA,IAAIQ,SAAS,CAACC,OAAO,EAAE;MACrBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,SAAS,CAACC,OAAO,CAAC;IACjD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAKS,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBV,OAAA;MAAKS,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBV,OAAA;QAAOW,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzChB,OAAA;QAAKS,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9BV,OAAA,CAACF,UAAU;UAACmB,GAAG,EAAEZ,SAAU;UAACa,KAAK,EAAC,MAAM;UAACf,KAAK,EAAEA,KAAM;UAACgB,QAAQ,EAAEf;QAAS;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNhB,OAAA;MAAKS,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBV,OAAA;QAAKS,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9BhB,OAAA;QAAKS,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CAzBID,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AA2BX,eAAeA,KAAK;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}